nn_cfg:
  lr: 1e-3
  method: adam
  intermediate_layer_sizes: [100, 500]
  batch_size: 100
  epochs: 1e6
  decay_lr: .1
  min_lr: 1e-7
  decay_every: 1e7

plateau_decay:
  min_lr: 1e-7
  decay_factor: 5
  avg_window_size: 5 # in epochs
  tolerance: 1e-8 #1e-3
  patience: 1


pretrain:
  pretrain_method: adam
  pretrain_stepsize: 1e-3
  pretrain_iters: 0
  pretrain_batches: 10

data:
  datetime: ''


eval_every_x_epochs: 200
save_every_x_epochs: 1
test_every_x_epochs: 1
write_csv_every_x_batches: 1
epochs_jit: 10

prediction_variable: w
angle_anchors: [0]
plot_iterates: [0, 10, 20]
loss_method: 'fixed_k' #'fixed_k' #'constant_sum'
# share_all: False
num_clusters: 10
pretrain_alpha: False
normalize_inputs: True
normalize_alpha: 'other'

accuracies: [.1, .01, .001, .0001]
rho_x: 1
scale: 1
alpha_relax: 1
save_weights_flag: True

skip_startup: True
num_samples_test: 1000
num_samples_train: 1000
# eval_batch_size_test: 100
eval_unrolls: 500
N_train: 10000
N_test: 1000
train_unrolls: 60
supervised: False
load_weights_datetime: '2023-07-09/14-35-29'
# '2023-07-09/14-14-53'
# solve_c_num: 1000

# output_datetimes: 
# reg:['2023-07-09/14-14-53', '2023-07-09/14-27-54', '2023-07-09/14-32-59', '2023-07-09/14-33-59', '2023-07-09/14-35-29', 
# obj: '2023-07-09/15-06-38', '2023-07-09/15-23-01', '2023-07-09/15-35-15', '2023-07-09/15-38-54', '2023-07-09/15-40-50']
# 120: '2023-07-09/14-42-55',

# solving in C
rel_tols: [1e-1, 1e-2, 1e-3, 1e-4, 1e-5]
abs_tols: [1e-1, 1e-2, 1e-3, 1e-4, 1e-5]
# solve_c_num: 1000

# rollouts
num_rollouts: 0
closed_loop_budget: 15